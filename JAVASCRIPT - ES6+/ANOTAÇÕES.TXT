-- EM JAVASCRIPT PODEMOS ESTAR DESCONTRUINDO NOSSOS OBJETOS E LISTAS, QUE SERIA UMA FORMA MAIS RÁPIDA E 
FÁCIL DE UTILIZAMOS NOSSOS OBJETOS E ARRAYS.

DESCONTRUINDO UM OBJETO:
 
 let pessoa ={
    nome: 'Pedro',
    idade: 23
 }

 -- NORMALMENTE ACESSARIAMOS NOSSOS OBJETOS DESSA FORMA: pessoa.nome, pessoa.idade. O QUE POR MUITA
 DAS VEZES NÃO É NADA PRÁTICO.

 PARA SOLUCIONAR ISSO, DESCONTRUIMOS NOSSOS OBJETOS: 
 
 const {nome, idade} = pessoa

E SE QUISERMOS UTILIZAR AS PROPIEDADES DO OBJETO NÃO PRECISAMOS MAIS CHAMAR ASSIM: pessoa.nome...
APENAS PASSANDO O NOME DA PROPIEDADE.

-- NO CASO DA LISTA PODEMOS TAMBÉM ESTAR DESCONTRUINDO, MAS ELAS SÃO ACESSADAS PELO INDICE ATRAVES
DE UMA VARIAVEL QUE NOMEAMOS...

SINTAXE: let nomes = ['Pedro, 'Lucas']

DESCONTRUINDO: const [primeiro, segundo] = nomes

QUANDO EU FOR DA UM CONSOLE EM PRIMEIRO, ELE VAI RETORNAR O INDICE 0 DA LISTA.

-- PODEMOS JUNTAR VALORES DE ARRAYS E OBJETOS UTILIZANDO O OPERADOR 'spread'. BASICAMENTE, PODEMOS PEGAR UM ARRAY
E SEUS VALORES E JUNTAR COM OUTRO ARRAY UTILIZANDO APENAS '... nomeArray' (PODE SER UTILIZADO COM OBJETOS)

SINTAXE: let numeros =  [1,2,3]
         let sequencia =  [...numeros, 4,5,6 ]

A SAÍDA DO ARRAY 'sequencia' SERÁ: [1,2,3,4,5,6]

-- PODEMOS UTILIZAR A MESMA COISA DO spread MAS PARA FUNÇÕES, PARA ISSO CHAMAMOS O OPERADOR 'rest'
ELE AJUDA QUANDO NÃO SABEMOS A QUANTIDADE DE ARGUMENTOS QUE SERÃO PASSADAS DENTRO DOS PARÂMETROS DAS NOSSAS
FUNÇÕES. 

EXEMPLO: FUNÇÃO QUE RECEBE UMA LISTA DE CONVIDADOS E IMPRIME OS MESMOS
   function convidados(nomes){
    console.log('Sejam bem vindos');
    console.log('CONVIDADOS: ' + nomes);
}
convidados('Pedro', 'Manel', 'Catarina') -> QUANDO ESTOU FAZENDO ISSO, INSERINDO VIRGULAS EU ESTOU INSERINDO MAIS
                                            DE UM ARGUMENTO, ENQUANTO MINHA FUNÇÃO RECEBE APENAS UM. E NA SAÍDA
                                            DO CONSOLE, ELE IRÁ IMPRIMIR APENAS O 'Pedro' É AÍ QUE ENTRA O rest

NO PARAMETRO DA FUNÇÃO, DEVE SER UTILIZADO OS '...' -> E ELE IRÁ TRATAR OS ARGUMENTOS COMO UM ARRAY QUE É O QUE
O spread E O rest FAZEM.

SINTAXE: function convidados(...nomes){
   console.log('Sejam bem vindos');
   console.log('CONVIDADOS: ' + nomes);
}

E NA SAÍDA DOS DADOS, ELE IRÁ TRATAR COMO UM ARRAY.